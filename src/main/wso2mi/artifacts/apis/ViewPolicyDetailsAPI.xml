<?xml version="1.0" encoding="UTF-8"?>
<api context="/insurance/1.0.0/view_policy" name="ViewPolicyDetailsAPI"
    xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="GET" uri-template="/?policy_id={policy_id}">
        <inSequence>

           <property name="RequestId" expression="get-property('transport', 'RequestId')" />


            <filter xpath="not(get-property('RequestId'))">
                <then>
                    <property name="HTTP_SC" value="400" scope="axis2" />
                    <property name="messageType" value="application/json" scope="axis2" />
                    <payloadFactory media-type="json" template-type="default">
                        <format>{ "ResponseBody": { "Status": "Error", "RequestId": null,
                            "ErrorMessage": "RequestId header required" } }</format>
                    </payloadFactory>
                    <respond />
                </then>
            </filter>


            <filter xpath="string-length(get-property('RequestId')) != 5">
                <then>
                    <property name="HTTP_SC" value="400" scope="axis2" />
                    <property name="messageType" value="application/json" scope="axis2" />
                    <payloadFactory media-type="json" template-type="default">
                        <format>{ "ResponseBody": { "Status": "Error", "RequestId":
                            "${properties.synapse.RequestId}", "ErrorMessage": "RequestId must be exactly 5 digits" } }</format>
                    </payloadFactory>
                    <respond />
                </then>
            </filter>

            <property name="uri.var.policy_id" scope="default" type="STRING"
                expression="${params.queryParams.policy_id}" />

            <property name="x-api-key" scope="transport" type="STRING"
                expression="wso2:vault-lookup('x_api_key')" />

            <call>
                <endpoint key="ViewPolicyDetailsEndpoint" />
            </call>
            
            <variable name="PolicyId" type="STRING" expression="json-eval($.policy_id)" />
            <variable name="PolicyHolder" type="STRING" expression="json-eval($.policy_holder)" />
            <variable name="PolicyDetails" type="STRING" expression="json-eval($.policy_details)" />
            <variable name="beneficiaries" type="STRING" expression="json-eval($.beneficiaries)" />
            <variable name="PaymentInfo" type="STRING" expression="json-eval($.payment_info)" />
            
            <property name="HTTP_SC" value="200" scope="axis2" />
            <payloadFactory media-type="json" template-type="default">
                <format>
                    {"ResponseHeader":
                    {"status":"ok","RequestId":"${properties.synapse.RequestId}"},"ResponseBody":{"PolicyId":"${vars.PolicyId}","PolicyHolder":${vars.PolicyHolder},"PolicyDetails":${vars.PolicyDetails},"Beneficiaries":${vars.beneficiaries},"PaymentInfo":${vars.PaymentInfo},
                    "status":"ACTIVE",
                    "CreatedDate":"2024-08-29"}}</format>
            </payloadFactory>
            <respond />
        </inSequence>
        <faultSequence>
            <log category="ERROR" logMessageID="false" logFullPayload="true">
                <message>Error occurred in ViewPolicyDetailsAPI</message>
            </log>
            <property name="HTTP_SC" value="500" scope="axis2"/>
            <property name="messageType" value="application/json" scope="axis2"/>
            <payloadFactory media-type="json" template-type="default">
                <format>{
                    "ResponseBody": { 
                        "Status": "Error", 
                        "RequestId": "${properties.synapse.RequestId}", 
                        "ErrorMessage": "$1"
                    } 
                }</format>
                <args>
                    <arg expression="get-property('ERROR_MESSAGE')"/>
                </args>
            </payloadFactory>
            <respond />
        </faultSequence>
    </resource>
</api>